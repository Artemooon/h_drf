version: "3.3"

services:
  djangoapp:
    build:
      context: .
      dockerfile: Dockerfile
    command: "gunicorn  games.games.wsgi:application --bind :8000"
    restart: always
    env_file:
      - .env
    volumes:
      - ./:/app
      - static:/static
    depends_on:
      - redis
      - db

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A games.games.celery worker --loglevel=INFO"
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A games.games.celery -B --loglevel=INFO"
    volumes:
      - .:/app
    depends_on:
        - redis
        - db
    env_file:
      - .env

#  nginx:
#    build:
#      context: nginx
#      dockerfile: Dockerfile
#    ports:
#      - "80:80"
#    volumes:
#      - .:/app
#      - ./static/:/static
#    restart: on-failure
#    depends_on:
#      - djangoapp

  db:
    image: postgres:12-alpine
    networks:
      - default
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    ports:
      - "5432:5432"

  redis:
      image: redis:latest
      restart: always
      environment:
        - REDIS_HOST=redis
      volumes:
        - redis_data:/data

volumes:
  postgres_data:
  redis_data:
  static: